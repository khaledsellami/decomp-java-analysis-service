{
  "classes": [{
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "BaseEntity",
    "fullName": "org.springframework.samples.petclinic.model.BaseEntity",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/BaseEntity.java",
    "referencedTypes": ["javax.persistence.GeneratedValue", "java.lang.Integer", "void", "boolean", "java.lang.Object", "javax.persistence.MappedSuperclass", "org.springframework.samples.petclinic.model.BaseEntity", "javax.persistence.Id", "\u003cnulltype\u003e", "javax.persistence.GenerationType"],
    "fieldTypes": ["java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.lang.Integer"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "void", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.BaseEntity()"],
    "textAndNames": ["BaseEntity", "id", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "hashCode", "", "id", "setId", "", "id", "id", "finalize", "", "toString", "", "clone", "", "", "Simple JavaBean domain object with an id property. Used as a base class for objects needing this property.", "Simple JavaBean domain object with an id property. Used as a base class for objects needing this property.\n\n@author Ken Krebs\n@author Juergen Hoeller\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "hashCode()", "setId(java.lang.Integer)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "NamedEntity",
    "fullName": "org.springframework.samples.petclinic.model.NamedEntity",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/NamedEntity.java",
    "referencedTypes": ["void", "org.springframework.samples.petclinic.model.NamedEntity", "javax.persistence.Column", "javax.persistence.MappedSuperclass", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "java.lang.Override"],
    "fieldTypes": ["java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.String", "java.lang.Object", "java.lang.Integer"],
    "returnTypes": ["java.lang.String", "java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "void", "java.lang.String", "void", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.BaseEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.NamedEntity()"],
    "textAndNames": ["NamedEntity", "name", "id", "getName", "", "name", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "name", "setName", "", "name", "name", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "hashCode", "", "id", "setId", "", "id", "id", "toString", "", "finalize", "", "clone", "", "", "Simple JavaBean domain object adds a name property to \u003ccode\u003eBaseEntity\u003c/code\u003e. Used as a base class for objects\nneeding these properties.", "Simple JavaBean domain object adds a name property to \u003ccode\u003eBaseEntity\u003c/code\u003e. Used as a base class for objects\nneeding these properties.\n\n@author Ken Krebs\n@author Juergen Hoeller\n"],
    "methods": ["getName()", "getClass()", "wait(long)", "wait(long,int)", "wait()", "setName(java.lang.String)", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "hashCode()", "setId(java.lang.Integer)", "toString()", "finalize()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Owner",
    "fullName": "org.springframework.samples.petclinic.model.Owner",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Owner.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "java.util.Set", "java.util.Set", "org.springframework.samples.petclinic.model.Owner", "javax.persistence.Entity", "javax.validation.constraints.Digits", "java.util.ArrayList", "java.lang.String", "org.springframework.beans.support.PropertyComparator", "javax.persistence.Column", "java.util.List", "java.lang.Override", "org.springframework.beans.support.MutableSortDefinition", "java.util.HashSet", "java.util.Collections", "javax.persistence.Table", "void", "org.springframework.core.style.ToStringCreator", "org.springframework.samples.petclinic.model.BaseEntity", "javax.persistence.OneToMany", "\u003cnulltype\u003e", "int", "boolean", "org.springframework.samples.petclinic.model.NamedEntity", "javax.persistence.CascadeType", "javax.validation.constraints.NotEmpty", "org.springframework.samples.petclinic.model.Person"],
    "fieldTypes": ["java.lang.String", "java.lang.String", "java.lang.String", "java.util.Set", "java.lang.String", "java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.samples.petclinic.model.Pet", "java.lang.String", "java.util.Set", "java.lang.Integer", "java.lang.String", "java.lang.String", "boolean", "java.lang.String", "java.lang.String", "java.lang.String", "java.lang.String"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "void", "java.util.Set", "void", "int", "java.lang.String", "void", "void", "void", "java.lang.String", "java.lang.String", "org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.model.Pet", "java.lang.String", "void", "void", "java.util.List", "boolean", "void", "void", "java.lang.String", "void", "java.lang.Object", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.Person"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Owner()"],
    "textAndNames": ["Owner", "address", "city", "telephone", "pets", "firstName", "lastName", "id", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "pet", "addPet", "", "pet", "pet", "getPetsInternal", "", "pets", "pets", "pets", "notify", "", "hashCode", "", "getTelephone", "", "telephone", "lastName", "setLastName", "", "lastName", "lastName", "pets", "setPetsInternal", "", "pets", "pets", "id", "setId", "", "id", "id", "getAddress", "", "address", "getCity", "", "city", "name", "getPet", "Return the Pet with the given name, or null if none found for this Owner.", "Return the Pet with the given name, or null if none found for this Owner.\n\n@param name\n\t\tto test\n@return true if pet name is already in use\n", "name", "name", "ignoreNew", "getPet", "Return the Pet with the given name, or null if none found for this Owner.", "Return the Pet with the given name, or null if none found for this Owner.\n\n@param name\n\t\tto test\n@return true if pet name is already in use\n", "name", "name", "ignoreNew", "pet", "pet", "compName", "compName", "compName", "name", "pet", "getLastName", "", "lastName", "address", "setAddress", "", "address", "address", "city", "setCity", "", "city", "city", "getPets", "", "sortedPets", "sortedPets", "isNew", "", "id", "telephone", "setTelephone", "", "telephone", "telephone", "firstName", "setFirstName", "", "firstName", "firstName", "toString", "", "address", "city", "telephone", "finalize", "", "clone", "", "getFirstName", "", "firstName", "", "Simple JavaBean domain object representing an owner.", "Simple JavaBean domain object representing an owner.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Michael Isvy\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "addPet(org.springframework.samples.petclinic.model.Pet)", "getPetsInternal()", "notify()", "hashCode()", "getTelephone()", "setLastName(java.lang.String)", "setPetsInternal(java.util.Set)", "setId(java.lang.Integer)", "getAddress()", "getCity()", "getPet(java.lang.String)", "getPet(java.lang.String,boolean)", "getLastName()", "setAddress(java.lang.String)", "setCity(java.lang.String)", "getPets()", "isNew()", "setTelephone(java.lang.String)", "setFirstName(java.lang.String)", "toString()", "finalize()", "clone()", "getFirstName()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Person",
    "fullName": "org.springframework.samples.petclinic.model.Person",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Person.java",
    "referencedTypes": ["void", "javax.persistence.Column", "javax.persistence.MappedSuperclass", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "javax.validation.constraints.NotEmpty", "org.springframework.samples.petclinic.model.Person"],
    "fieldTypes": ["java.lang.String", "java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.lang.String", "java.lang.String", "java.lang.Integer"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.lang.String", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "void", "void", "void", "void", "java.lang.String", "java.lang.Object", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.BaseEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Person()"],
    "textAndNames": ["Person", "firstName", "lastName", "id", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getLastName", "", "lastName", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "hashCode", "", "firstName", "setFirstName", "", "firstName", "firstName", "lastName", "setLastName", "", "lastName", "lastName", "id", "setId", "", "id", "id", "finalize", "", "toString", "", "clone", "", "getFirstName", "", "firstName", "", "Simple JavaBean domain object representing an person.", "Simple JavaBean domain object representing an person.\n\n@author Ken Krebs\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "getLastName()", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "hashCode()", "setFirstName(java.lang.String)", "setLastName(java.lang.String)", "setId(java.lang.Integer)", "finalize()", "toString()", "clone()", "getFirstName()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Pet",
    "fullName": "org.springframework.samples.petclinic.model.Pet",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Pet.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.model.Visit", "java.util.Set", "java.util.Set", "javax.persistence.FetchType", "org.springframework.samples.petclinic.model.Owner", "javax.persistence.Entity", "java.util.ArrayList", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "java.time.LocalDate", "javax.persistence.ManyToOne", "org.springframework.beans.support.PropertyComparator", "javax.persistence.JoinColumn", "javax.persistence.Column", "java.util.List", "org.springframework.beans.support.MutableSortDefinition", "java.util.HashSet", "java.util.Collections", "javax.persistence.Table", "void", "javax.persistence.OneToMany", "\u003cnulltype\u003e", "boolean", "org.springframework.samples.petclinic.model.NamedEntity", "javax.persistence.CascadeType", "org.springframework.format.annotation.DateTimeFormat"],
    "fieldTypes": ["java.time.LocalDate", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.model.Owner", "java.util.Set", "java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.String", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "java.lang.Integer", "java.util.Set", "java.time.LocalDate", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.lang.String", "java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "void", "void", "org.springframework.samples.petclinic.model.Owner", "java.util.List", "int", "java.time.LocalDate", "java.util.Set", "void", "void", "boolean", "void", "void", "org.springframework.samples.petclinic.model.PetType", "void", "java.lang.String", "void", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.NamedEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Pet()"],
    "textAndNames": ["Pet", "birthDate", "type", "owner", "visits", "name", "id", "getName", "", "name", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "name", "setName", "", "name", "name", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "owner", "setOwner", "", "owner", "owner", "notify", "", "getOwner", "", "owner", "getVisits", "", "sortedVisits", "sortedVisits", "hashCode", "", "getBirthDate", "", "birthDate", "getVisitsInternal", "", "visits", "visits", "visits", "id", "setId", "", "id", "id", "visits", "setVisitsInternal", "", "visits", "visits", "isNew", "", "id", "birthDate", "setBirthDate", "", "birthDate", "birthDate", "type", "setType", "", "type", "type", "getType", "", "type", "visit", "addVisit", "", "visit", "visit", "toString", "", "finalize", "", "clone", "", "", "Simple business object representing a pet.", "Simple business object representing a pet.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n"],
    "methods": ["getName()", "getClass()", "wait(long)", "wait(long,int)", "wait()", "setName(java.lang.String)", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "setOwner(org.springframework.samples.petclinic.model.Owner)", "notify()", "getOwner()", "getVisits()", "hashCode()", "getBirthDate()", "getVisitsInternal()", "setId(java.lang.Integer)", "setVisitsInternal(java.util.Set)", "isNew()", "setBirthDate(java.time.LocalDate)", "setType(org.springframework.samples.petclinic.model.PetType)", "getType()", "addVisit(org.springframework.samples.petclinic.model.Visit)", "toString()", "finalize()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetType",
    "fullName": "org.springframework.samples.petclinic.model.PetType",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/PetType.java",
    "referencedTypes": ["javax.persistence.Table", "org.springframework.samples.petclinic.model.NamedEntity", "javax.persistence.Entity", "java.lang.String", "org.springframework.samples.petclinic.model.PetType"],
    "fieldTypes": ["java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.String", "java.lang.Object", "java.lang.Integer"],
    "returnTypes": ["java.lang.String", "java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "void", "java.lang.String", "void", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.NamedEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.PetType()"],
    "textAndNames": ["PetType", "name", "id", "getName", "", "name", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "name", "setName", "", "name", "name", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "hashCode", "", "id", "setId", "", "id", "id", "toString", "", "finalize", "", "clone", "", "", "", "\n@author Juergen Hoeller\nCan be Cat, Dog, Hamster...\n"],
    "methods": ["getName()", "getClass()", "wait(long)", "wait(long,int)", "wait()", "setName(java.lang.String)", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "hashCode()", "setId(java.lang.Integer)", "toString()", "finalize()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Specialty",
    "fullName": "org.springframework.samples.petclinic.model.Specialty",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Specialty.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Specialty", "javax.persistence.Table", "org.springframework.samples.petclinic.model.NamedEntity", "javax.persistence.Entity", "java.lang.String"],
    "fieldTypes": ["java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.String", "java.lang.Object", "java.lang.Integer"],
    "returnTypes": ["java.lang.String", "java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "void", "java.lang.String", "void", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.NamedEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Specialty()"],
    "textAndNames": ["Specialty", "name", "id", "getName", "", "name", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "name", "setName", "", "name", "name", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "hashCode", "", "id", "setId", "", "id", "id", "toString", "", "finalize", "", "clone", "", "", "Models a {@link Vet Vet\u0027s} specialty (for example, dentistry).", "Models a {@link Vet Vet\u0027s} specialty (for example, dentistry).\n\n@author Juergen Hoeller\n"],
    "methods": ["getName()", "getClass()", "wait(long)", "wait(long,int)", "wait()", "setName(java.lang.String)", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "hashCode()", "setId(java.lang.Integer)", "toString()", "finalize()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Vet",
    "fullName": "org.springframework.samples.petclinic.model.Vet",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Vet.java",
    "referencedTypes": ["javax.persistence.Table", "java.util.Set", "void", "java.util.Set", "javax.persistence.FetchType", "javax.persistence.Entity", "org.springframework.samples.petclinic.model.Vet", "java.util.ArrayList", "java.lang.String", "javax.persistence.ManyToMany", "\u003cnulltype\u003e", "org.springframework.beans.support.PropertyComparator", "org.springframework.samples.petclinic.model.Specialty", "int", "javax.persistence.JoinColumn", "boolean", "javax.xml.bind.annotation.XmlElement", "java.util.List", "org.springframework.beans.support.MutableSortDefinition", "org.springframework.samples.petclinic.model.Person", "javax.persistence.JoinTable", "java.util.HashSet", "java.util.Collections"],
    "fieldTypes": ["java.util.Set", "java.lang.String", "java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.util.Set", "java.lang.String", "java.lang.String", "java.lang.Integer", "org.springframework.samples.petclinic.model.Specialty"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.util.Set", "java.lang.String", "java.util.List", "void", "boolean", "java.lang.Integer", "void", "boolean", "void", "int", "int", "void", "void", "void", "void", "void", "java.lang.String", "java.lang.Object", "void", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.Person"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Vet()"],
    "textAndNames": ["Vet", "specialties", "firstName", "lastName", "id", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getSpecialtiesInternal", "", "specialties", "specialties", "specialties", "getLastName", "", "lastName", "getSpecialties", "", "sortedSpecs", "sortedSpecs", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "isNew", "", "id", "notify", "", "getNrOfSpecialties", "", "hashCode", "", "specialties", "setSpecialtiesInternal", "", "specialties", "specialties", "firstName", "setFirstName", "", "firstName", "firstName", "lastName", "setLastName", "", "lastName", "lastName", "id", "setId", "", "id", "id", "finalize", "", "toString", "", "clone", "", "specialty", "addSpecialty", "", "specialty", "getFirstName", "", "firstName", "", "Simple JavaBean domain object representing a veterinarian.", "Simple JavaBean domain object representing a veterinarian.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Arjen Poutsma\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "getSpecialtiesInternal()", "getLastName()", "getSpecialties()", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "isNew()", "notify()", "getNrOfSpecialties()", "hashCode()", "setSpecialtiesInternal(java.util.Set)", "setFirstName(java.lang.String)", "setLastName(java.lang.String)", "setId(java.lang.Integer)", "finalize()", "toString()", "clone()", "addSpecialty(org.springframework.samples.petclinic.model.Specialty)", "getFirstName()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Vets",
    "fullName": "org.springframework.samples.petclinic.model.Vets",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Vets.java",
    "referencedTypes": ["boolean", "java.lang.Object", "javax.xml.bind.annotation.XmlRootElement", "org.springframework.samples.petclinic.model.Vets", "org.springframework.samples.petclinic.model.Vet", "java.util.ArrayList", "java.lang.String", "javax.xml.bind.annotation.XmlElement", "java.util.List", "\u003cnulltype\u003e"],
    "fieldTypes": ["java.util.List"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.util.List", "void", "boolean", "void", "void", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Vets()"],
    "textAndNames": ["Vets", "vetList", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getVetList", "", "vetList", "vetList", "vetList", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "Simple domain object representing a list of veterinarians. Mostly here to be used for the \u0027vets\u0027 {@link org.springframework.web.servlet.view.xml.MarshallingView}.", "Simple domain object representing a list of veterinarians. Mostly here to be used for the \u0027vets\u0027 {@link org.springframework.web.servlet.view.xml.MarshallingView}.\n\n@author Arjen Poutsma\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "getVetList()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "Visit",
    "fullName": "org.springframework.samples.petclinic.model.Visit",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/model/Visit.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.model.Pet", "javax.persistence.Table", "void", "javax.persistence.Entity", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "java.time.LocalDate", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "javax.persistence.Column", "javax.validation.constraints.NotEmpty", "org.springframework.format.annotation.DateTimeFormat"],
    "fieldTypes": ["java.time.LocalDate", "java.lang.String", "org.springframework.samples.petclinic.model.Pet", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.lang.String", "java.time.LocalDate", "java.lang.Integer", "org.springframework.samples.petclinic.model.Pet"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "org.springframework.samples.petclinic.model.Pet", "void", "boolean", "java.lang.Integer", "void", "void", "boolean", "java.lang.String", "void", "int", "void", "void", "java.time.LocalDate", "void", "java.lang.String", "java.lang.Object", "void"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.BaseEntity"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.model.Visit()"],
    "textAndNames": ["Visit", "date", "description", "pet", "id", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getPet", "Getter for property pet.", "Getter for property pet.\n\n@return Value of property pet.\n", "pet", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "description", "setDescription", "Setter for property description.", "Setter for property description.\n\n@param description\n\t\tNew value of property description.\n", "description", "description", "isNew", "", "id", "getDescription", "Getter for property description.", "Getter for property description.\n\n@return Value of property description.\n", "description", "notify", "", "hashCode", "", "date", "setDate", "Setter for property date.", "Setter for property date.\n\n@param date\n\t\tNew value of property date.\n", "date", "date", "id", "setId", "", "id", "id", "getDate", "Getter for property date.", "Getter for property date.\n\n@return Value of property date.\n", "date", "finalize", "", "toString", "", "clone", "", "pet", "setPet", "Setter for property pet.", "Setter for property pet.\n\n@param pet\n\t\tNew value of property pet.\n", "pet", "pet", "Creates a new instance of Visit for the current date", "Creates a new instance of Visit for the current date\n", "date", "Simple JavaBean domain object representing a visit.", "Simple JavaBean domain object representing a visit.\n\n@author Ken Krebs\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "getPet()", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "setDescription(java.lang.String)", "isNew()", "getDescription()", "notify()", "hashCode()", "setDate(java.time.LocalDate)", "setId(java.lang.Integer)", "getDate()", "finalize()", "toString()", "clone()", "setPet(org.springframework.samples.petclinic.model.Pet)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcOwnerRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcOwnerRepositoryImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "org.springframework.samples.petclinic.model.Pet", "org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource", "java.util.HashMap", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "org.springframework.jdbc.core.BeanPropertyRowMapper", "org.springframework.beans.factory.annotation.Autowired", "java.lang.Number", "org.springframework.orm.ObjectRetrievalFailureException", "java.util.List", "java.util.List", "java.lang.Override", "org.springframework.samples.petclinic.repository.OwnerRepository", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor", "void", "org.springframework.samples.petclinic.model.BaseEntity", "javax.sql.DataSource", "org.springframework.samples.petclinic.util.EntityUtils", "int", "org.springframework.stereotype.Repository", "org.springframework.dao.EmptyResultDataAccessException", "org.springframework.jdbc.core.simple.SimpleJdbcInsert", "java.util.Collection", "java.util.Collection", "org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl", "java.util.Map", "java.util.Map"],
    "fieldTypes": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "org.springframework.jdbc.core.simple.SimpleJdbcInsert"],
    "parameterTypes": ["long", "long", "int", "org.springframework.samples.petclinic.model.Owner", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "int", "java.util.List", "java.lang.String", "javax.sql.DataSource"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "void", "boolean", "void", "void", "java.util.Collection", "void", "org.springframework.samples.petclinic.model.Owner", "int", "void", "java.util.Collection", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.OwnerRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl(javax.sql.DataSource)"],
    "textAndNames": ["JdbcOwnerRepositoryImpl", "namedParameterJdbcTemplate", "insertOwner", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "owner", "loadPetsAndVisits", "", "params", "owner", "namedParameterJdbcTemplate", "params", "pets", "pet", "petTypes", "class", "pet", "owner", "pet", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "owner", "save", "", "owner", "owner", "insertOwner", "parameterSource", "owner", "newKey", "namedParameterJdbcTemplate", "parameterSource", "getPetTypes", "", "namedParameterJdbcTemplate", "class", "notify", "", "id", "findById", "Loads the {@link Owner} with the supplied \u003ccode\u003eid\u003c/code\u003e; also loads the {@link Pet Pets} and {@link Visit Visits}\nfor the corresponding owner, if not already loaded.", "Loads the {@link Owner} with the supplied \u003ccode\u003eid\u003c/code\u003e; also loads the {@link Pet Pets} and {@link Visit Visits}\nfor the corresponding owner, if not already loaded.\n", "params", "id", "owner", "namedParameterJdbcTemplate", "params", "class", "class", "id", "owner", "owner", "hashCode", "", "owners", "loadOwnersPetsAndVisits", "Loads the {@link Pet} and {@link Visit} data for the supplied {@link List} of {@link Owner Owners}.", "Loads the {@link Pet} and {@link Visit} data for the supplied {@link List} of {@link Owner Owners}.\n\n@param owners\n\t\tthe list of owners for whom the pet and visit data should be loaded\n@see #loadPetsAndVisits(Owner)\n", "owners", "owner", "lastName", "findByLastName", "Loads {@link Owner Owners} from the data store by last name, returning all owners whose last name \u003ci\u003estarts\u003c/i\u003e with\nthe given name; also loads the {@link Pet Pets} and {@link Visit Visits} for the corresponding owners, if not\nalready loaded.", "Loads {@link Owner Owners} from the data store by last name, returning all owners whose last name \u003ci\u003estarts\u003c/i\u003e with\nthe given name; also loads the {@link Pet Pets} and {@link Visit Visits} for the corresponding owners, if not\nalready loaded.\n", "params", "lastName", "namedParameterJdbcTemplate", "params", "class", "owners", "owners", "finalize", "", "toString", "", "clone", "", "", "insertOwner", "dataSource", "namedParameterJdbcTemplate", "dataSource", "A simple JDBC-based implementation of the {@link OwnerRepository} interface.", "A simple JDBC-based implementation of the {@link OwnerRepository} interface.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Rob Harrop\n@author Sam Brannen\n@author Thomas Risberg\n@author Mark Fisher\n@author Antoine Rey\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner)", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "save(org.springframework.samples.petclinic.model.Owner)", "getPetTypes()", "notify()", "findById(int)", "hashCode()", "loadOwnersPetsAndVisits(java.util.List)", "findByLastName(java.lang.String)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcPet",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcPet",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPet.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "org.springframework.samples.petclinic.model.Pet", "int", "void"],
    "fieldTypes": ["int", "int", "java.time.LocalDate", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.model.Owner", "java.util.Set", "java.lang.String", "java.lang.Integer"],
    "parameterTypes": ["long", "long", "int", "java.lang.String", "java.lang.Object", "int", "org.springframework.samples.petclinic.model.Owner", "java.lang.Integer", "int", "java.util.Set", "java.time.LocalDate", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.lang.String", "java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.lang.Integer", "void", "int", "void", "void", "void", "org.springframework.samples.petclinic.model.Owner", "java.util.List", "int", "java.time.LocalDate", "int", "java.util.Set", "void", "void", "void", "boolean", "void", "void", "org.springframework.samples.petclinic.model.PetType", "void", "java.lang.String", "void", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.model.Pet"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPet()"],
    "textAndNames": ["JdbcPet", "typeId", "ownerId", "birthDate", "type", "owner", "visits", "name", "id", "getName", "", "name", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "name", "setName", "", "name", "name", "notifyAll", "", "arg0", "equals", "", "getId", "", "id", "registerNatives", "", "getTypeId", "", "typeId", "ownerId", "setOwnerId", "", "ownerId", "ownerId", "owner", "setOwner", "", "owner", "owner", "notify", "", "getOwner", "", "owner", "getVisits", "", "sortedVisits", "sortedVisits", "hashCode", "", "getBirthDate", "", "birthDate", "getOwnerId", "", "ownerId", "getVisitsInternal", "", "visits", "visits", "visits", "id", "setId", "", "id", "id", "typeId", "setTypeId", "", "typeId", "typeId", "visits", "setVisitsInternal", "", "visits", "visits", "isNew", "", "id", "birthDate", "setBirthDate", "", "birthDate", "birthDate", "type", "setType", "", "type", "type", "getType", "", "type", "visit", "addVisit", "", "visit", "visit", "toString", "", "finalize", "", "clone", "", "", "Subclass of Pet that carries temporary id properties which are only relevant for a JDBC implementation of the\nPetRepository.", "Subclass of Pet that carries temporary id properties which are only relevant for a JDBC implementation of the\nPetRepository.\n\n@author Juergen Hoeller\n"],
    "methods": ["getName()", "getClass()", "wait(long)", "wait(long,int)", "wait()", "setName(java.lang.String)", "notifyAll()", "equals(java.lang.Object)", "getId()", "registerNatives()", "getTypeId()", "setOwnerId(int)", "setOwner(org.springframework.samples.petclinic.model.Owner)", "notify()", "getOwner()", "getVisits()", "hashCode()", "getBirthDate()", "getOwnerId()", "getVisitsInternal()", "setId(java.lang.Integer)", "setTypeId(int)", "setVisitsInternal(java.util.Set)", "isNew()", "setBirthDate(java.time.LocalDate)", "setType(org.springframework.samples.petclinic.model.PetType)", "getType()", "addVisit(org.springframework.samples.petclinic.model.Visit)", "toString()", "finalize()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcPetRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRepositoryImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "java.util.HashMap", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl", "org.springframework.jdbc.core.BeanPropertyRowMapper", "org.springframework.beans.factory.annotation.Autowired", "java.lang.Number", "org.springframework.orm.ObjectRetrievalFailureException", "java.util.List", "java.lang.Override", "org.springframework.samples.petclinic.repository.OwnerRepository", "void", "org.springframework.samples.petclinic.model.BaseEntity", "org.springframework.samples.petclinic.repository.PetRepository", "javax.sql.DataSource", "org.springframework.samples.petclinic.util.EntityUtils", "int", "java.lang.Integer", "org.springframework.jdbc.core.namedparam.MapSqlParameterSource", "org.springframework.stereotype.Repository", "org.springframework.samples.petclinic.model.NamedEntity", "org.springframework.dao.EmptyResultDataAccessException", "org.springframework.jdbc.core.simple.SimpleJdbcInsert", "java.util.Map", "java.util.Map"],
    "fieldTypes": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "org.springframework.jdbc.core.simple.SimpleJdbcInsert", "org.springframework.samples.petclinic.repository.OwnerRepository"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.samples.petclinic.model.Pet", "int", "org.springframework.samples.petclinic.model.Pet", "javax.sql.DataSource", "org.springframework.samples.petclinic.repository.OwnerRepository"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "java.util.List", "void", "void", "void", "org.springframework.samples.petclinic.model.Pet", "int", "org.springframework.jdbc.core.namedparam.MapSqlParameterSource", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.PetRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl(javax.sql.DataSource,org.springframework.samples.petclinic.repository.OwnerRepository)"],
    "textAndNames": ["JdbcPetRepositoryImpl", "namedParameterJdbcTemplate", "insertPet", "ownerRepository", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "findPetTypes", "", "namedParameterJdbcTemplate", "params", "class", "registerNatives", "", "pet", "save", "", "pet", "insertPet", "pet", "pet", "newKey", "namedParameterJdbcTemplate", "pet", "notify", "", "id", "findById", "", "params", "id", "ownerId", "namedParameterJdbcTemplate", "params", "class", "class", "id", "ownerRepository", "ownerId", "owner", "class", "id", "hashCode", "", "pet", "createPetParameterSource", "Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Pet} instance.", "Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Pet} instance.\n", "pet", "pet", "pet", "pet", "pet", "finalize", "", "toString", "", "clone", "", "", "namedParameterJdbcTemplate", "dataSource", "insertPet", "dataSource", "ownerRepository", "ownerRepository", "", "\n@author Ken Krebs\n@author Juergen Hoeller\n@author Rob Harrop\n@author Sam Brannen\n@author Thomas Risberg\n@author Mark Fisher\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "findPetTypes()", "registerNatives()", "save(org.springframework.samples.petclinic.model.Pet)", "notify()", "findById(int)", "hashCode()", "createPetParameterSource(org.springframework.samples.petclinic.model.Pet)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcPetRowMapper",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetRowMapper.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper", "java.lang.Object", "java.sql.SQLException", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "java.time.LocalDate", "int", "org.springframework.samples.petclinic.model.NamedEntity", "org.springframework.jdbc.core.RowMapper", "java.sql.ResultSet", "java.lang.Override"],
    "fieldTypes": [],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.sql.ResultSet", "int"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.jdbc.core.RowMapper"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper()"],
    "textAndNames": ["JdbcPetRowMapper", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "rs", "rownum", "mapRow", "", "pet", "rs", "pet", "rs", "pet", "rs", "class", "pet", "rs", "pet", "rs", "pet", "finalize", "", "toString", "", "clone", "", "", "{@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\nof the {@link JdbcPet} class.", "{@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\nof the {@link JdbcPet} class.\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "mapRow(java.sql.ResultSet,int)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcPetVisitExtractor",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcPetVisitExtractor.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.model.Pet", "void", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper", "java.sql.SQLException", "java.lang.String", "\u003cnulltype\u003e", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper", "java.lang.Integer", "boolean", "java.sql.ResultSet", "java.lang.Override", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor"],
    "fieldTypes": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper"],
    "parameterTypes": ["java.sql.ResultSet", "long", "long", "int", "java.sql.ResultSet", "java.lang.Object", "java.sql.ResultSet", "org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.lang.Class", "java.lang.Integer", "void", "void", "void", "void", "java.lang.Integer", "boolean", "void", "void", "int", "java.util.List", "void", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor()"],
    "textAndNames": ["JdbcPetVisitExtractor", "expectedResults", "rootMapper", "childMapper", "getClass", "", "rs", "mapPrimaryKey", "", "rs", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "rs", "mapForeignKey", "", "rs", "rs", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "rs", "extractData", "", "rs", "more", "row", "more", "rootMapper", "rs", "row", "rs", "rs", "more", "primaryKey", "rs", "root", "childMapper", "rs", "row", "more", "rs", "more", "row", "more", "rs", "more", "row", "results", "root", "expectedResults", "ONE_AND_ONLY_ONE", "expectedResults", "ONE_OR_NONE", "results", "results", "expectedResults", "ONE_AND_ONLY_ONE", "expectedResults", "AT_LEAST_ONE", "results", "results", "root", "child", "addChild", "", "root", "child", "finalize", "", "toString", "", "clone", "", "", "{@link ResultSetExtractor} implementation by using the\n{@link OneToManyResultSetExtractor} of Spring Data Core JDBC Extensions.", "{@link ResultSetExtractor} implementation by using the\n{@link OneToManyResultSetExtractor} of Spring Data Core JDBC Extensions.\n"],
    "methods": ["getClass()", "mapPrimaryKey(java.sql.ResultSet)", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "mapForeignKey(java.sql.ResultSet)", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "extractData(java.sql.ResultSet)", "addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet,org.springframework.samples.petclinic.model.Visit)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": true,
    "simpleName": "1",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl.java",
    "referencedTypes": ["java.lang.Integer", "int", "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1", "org.springframework.jdbc.core.BeanPropertyRowMapper", "java.sql.SQLException", "java.sql.ResultSet", "java.lang.Override"],
    "fieldTypes": [],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.sql.ResultSet", "int"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "java.lang.Integer", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.jdbc.core.BeanPropertyRowMapper"],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["1", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "rs", "row", "mapRow", "", "rs", "finalize", "", "toString", "", "clone", "", ""],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "mapRow(java.sql.ResultSet,int)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcVetRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVetRepositoryImpl.java",
    "referencedTypes": ["java.lang.Object", "java.sql.SQLException", "org.springframework.samples.petclinic.model.Vet", "java.util.ArrayList", "java.lang.String", "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl", "org.springframework.jdbc.core.BeanPropertyRowMapper", "BeanPropertyRowMapper", "org.springframework.jdbc.core.BeanPropertyRowMapper", "org.springframework.beans.factory.annotation.Autowired", "java.util.List", "java.util.List", "java.util.List", "java.util.List", "java.sql.ResultSet", "java.lang.Override", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.model.BaseEntity", "org.springframework.samples.petclinic.util.EntityUtils", "org.springframework.jdbc.core.JdbcTemplate", "org.springframework.samples.petclinic.model.Specialty", "java.lang.Integer", "int", "org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1", "org.springframework.stereotype.Repository", "java.util.Collection"],
    "fieldTypes": ["org.springframework.jdbc.core.JdbcTemplate"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.jdbc.core.JdbcTemplate"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "java.util.Collection", "void", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VetRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)"],
    "textAndNames": ["JdbcVetRepositoryImpl", "jdbcTemplate", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "findAll", "Refresh the cache of Vets that the ClinicService is holding.", "Refresh the cache of Vets that the ClinicService is holding.\n", "vets", "jdbcTemplate", "class", "jdbcTemplate", "class", "vets", "jdbcTemplate", "rs", "vet", "vetSpecialtiesIds", "specialties", "class", "specialtyId", "vet", "specialty", "vets", "notify", "", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "jdbcTemplate", "jdbcTemplate", "A simple JDBC-based implementation of the {@link VetRepository} interface.", "A simple JDBC-based implementation of the {@link VetRepository} interface.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Rob Harrop\n@author Sam Brannen\n@author Thomas Risberg\n@author Mark Fisher\n@author Michael Isvy\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "findAll()", "notify()", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcVisitRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRepositoryImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.repository.jdbc.JdbcPet", "void", "java.util.HashMap", "org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper", "java.lang.Object", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "java.lang.String", "org.springframework.samples.petclinic.repository.VisitRepository", "org.springframework.samples.petclinic.model.BaseEntity", "javax.sql.DataSource", "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl", "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper", "java.lang.Integer", "org.springframework.jdbc.core.namedparam.MapSqlParameterSource", "org.springframework.stereotype.Repository", "org.springframework.beans.factory.annotation.Autowired", "java.lang.Number", "org.springframework.jdbc.core.simple.SimpleJdbcInsert", "java.util.List", "java.lang.Override", "java.lang.UnsupportedOperationException", "java.util.Map", "java.util.Map"],
    "fieldTypes": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "org.springframework.jdbc.core.simple.SimpleJdbcInsert"],
    "parameterTypes": ["long", "long", "int", "java.lang.Integer", "java.lang.Object", "org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.model.Visit", "javax.sql.DataSource"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.util.List", "void", "boolean", "void", "void", "void", "org.springframework.jdbc.core.namedparam.MapSqlParameterSource", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VisitRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl(javax.sql.DataSource)"],
    "textAndNames": ["JdbcVisitRepositoryImpl", "jdbcTemplate", "insertVisit", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "petId", "findByPetId", "", "params", "petId", "jdbcTemplate", "params", "jdbcTemplate", "params", "visits", "visit", "pet", "visits", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "visit", "save", "", "visit", "insertVisit", "visit", "visit", "newKey", "notify", "", "visit", "createVisitParameterSource", "Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Visit} instance.", "Creates a {@link MapSqlParameterSource} based on data values from the supplied {@link Visit} instance.\n", "visit", "visit", "visit", "visit", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "jdbcTemplate", "dataSource", "insertVisit", "dataSource", "A simple JDBC-based implementation of the {@link VisitRepository} interface.", "A simple JDBC-based implementation of the {@link VisitRepository} interface.\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Rob Harrop\n@author Sam Brannen\n@author Thomas Risberg\n@author Mark Fisher\n@author Michael Isvy\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "findByPetId(java.lang.Integer)", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "save(org.springframework.samples.petclinic.model.Visit)", "notify()", "createVisitParameterSource(org.springframework.samples.petclinic.model.Visit)", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JdbcVisitRowMapper",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/JdbcVisitRowMapper.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper", "org.springframework.samples.petclinic.model.Visit", "int", "java.lang.Object", "java.sql.SQLException", "org.springframework.jdbc.core.RowMapper", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "java.sql.ResultSet", "java.lang.Override", "java.time.LocalDate"],
    "fieldTypes": [],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.sql.ResultSet", "int"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "org.springframework.samples.petclinic.model.Visit", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.jdbc.core.RowMapper"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper()"],
    "textAndNames": ["JdbcVisitRowMapper", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "rs", "row", "mapRow", "", "visit", "rs", "visit", "rs", "class", "visit", "rs", "visit", "finalize", "", "toString", "", "clone", "", "", "{@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\nof the {@link Visit} class.", "{@link RowMapper} implementation mapping data from a {@link ResultSet} to the corresponding properties\nof the {@link Visit} class.\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "mapRow(java.sql.ResultSet,int)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "ExpectedResults",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/OneToManyResultSetExtractor.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "java.lang.Enum", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults"],
    "fieldTypes": ["java.lang.String", "int"],
    "parameterTypes": ["E", "java.lang.Object", "java.io.ObjectInputStream", "java.lang.Class", "java.lang.String", "java.lang.String"],
    "returnTypes": ["java.lang.Object", "int", "boolean", "void", "java.lang.Class", "int", "java.lang.String", "int", "void", "void", "java.lang.String", "T", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]"],
    "nestedTypes": [],
    "inheritedTypes": ["java.lang.Enum"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults()"],
    "textAndNames": ["ExpectedResults", "name", "ordinal", "clone", "", "arg0", "compareTo", "", "arg0", "equals", "", "finalize", "", "getDeclaringClass", "", "hashCode", "", "name", "", "ordinal", "", "arg0", "readObject", "", "readObjectNoData", "", "toString", "", "arg0", "arg1", "valueOf", "", "name", "valueOf", "", "values", "", "", ""],
    "methods": ["clone()", "compareTo(java.lang.Enum)", "equals(java.lang.Object)", "finalize()", "getDeclaringClass()", "hashCode()", "name()", "ordinal()", "readObject(java.io.ObjectInputStream)", "readObjectNoData()", "toString()", "valueOf(java.lang.Class,java.lang.String)", "valueOf(java.lang.String)", "values()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "OneToManyResultSetExtractor",
    "fullName": "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jdbc/OneToManyResultSetExtractor.java",
    "referencedTypes": ["void", "java.lang.Enum", "java.lang.Object", "java.sql.SQLException", "java.util.ArrayList", "java.lang.String", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults", "\u003cnulltype\u003e", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor", "int", "org.springframework.util.Assert", "boolean", "org.springframework.dao.IncorrectResultSizeDataAccessException", "org.springframework.jdbc.core.ResultSetExtractor", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper", "java.util.List", "java.sql.ResultSet", "java.util.List"],
    "fieldTypes": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper"],
    "parameterTypes": ["java.sql.ResultSet", "long", "long", "int", "java.sql.ResultSet", "java.lang.Object", "java.sql.ResultSet", "R", "C", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper", "org.springframework.jdbc.core.RowMapper", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults"],
    "returnTypes": ["java.lang.Class", "K", "void", "void", "void", "void", "K", "boolean", "void", "void", "int", "java.util.List", "void", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults"],
    "inheritedTypes": ["org.springframework.jdbc.core.ResultSetExtractor"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper,org.springframework.jdbc.core.RowMapper)", "org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper,org.springframework.jdbc.core.RowMapper,org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)"],
    "textAndNames": ["OneToManyResultSetExtractor", "expectedResults", "rootMapper", "childMapper", "ExpectedResults", "getClass", "", "rs", "mapPrimaryKey", "Map the primary key value to the required type.\nThis method must be implemented by subclasses.\nThis method should not call \u003ccode\u003enext()\u003c/code\u003e on\nthe ResultSet; it is only supposed to map values of the current row.", "Map the primary key value to the required type.\nThis method must be implemented by subclasses.\nThis method should not call \u003ccode\u003enext()\u003c/code\u003e on\nthe ResultSet; it is only supposed to map values of the current row.\n\n@param rs\n\t\tthe ResultSet\n@return the primary key value\n@throws SQLException\n", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "rs", "mapForeignKey", "Map the foreign key value to the required type.\nThis method must be implemented by subclasses.\nThis method should not call \u003ccode\u003enext()\u003c/code\u003e on\nthe ResultSet; it is only supposed to map values of the current row.", "Map the foreign key value to the required type.\nThis method must be implemented by subclasses.\nThis method should not call \u003ccode\u003enext()\u003c/code\u003e on\nthe ResultSet; it is only supposed to map values of the current row.\n\n@param rs\n\t\tthe ResultSet\n@return the foreign key value\n@throws SQLException\n", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "rs", "extractData", "", "rs", "more", "row", "more", "rootMapper", "rs", "row", "rs", "rs", "more", "primaryKey", "rs", "root", "childMapper", "rs", "row", "more", "rs", "more", "row", "more", "rs", "more", "row", "results", "root", "expectedResults", "ONE_AND_ONLY_ONE", "expectedResults", "ONE_OR_NONE", "results", "results", "expectedResults", "ONE_AND_ONLY_ONE", "expectedResults", "AT_LEAST_ONE", "results", "results", "root", "child", "addChild", "Add the child object to the root object\nThis method must be implemented by subclasses.", "Add the child object to the root object\nThis method must be implemented by subclasses.\n\n@param root\n\t\tthe Root object\n@param child\n\t\tthe Child object\n", "finalize", "", "toString", "", "clone", "", "Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s.", "Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s.\n\n@param rootMapper\n\t\t{@link RowMapper} to map the root entity, must not be {@literal null}.\n@param childMapper\n\t\t{@link RowMapper} to map the root entities, must not be {@literal null}.\n", "rootMapper", "childMapper", "Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s and {@link ExpectedResults}.", "Creates a new {@link OneToManyResultSetExtractor} from the given {@link RowMapper}s and {@link ExpectedResults}.\n\n@param rootMapper\n\t\t{@link RowMapper} to map the root entity, must not be {@literal null}.\n@param childMapper\n\t\t{@link RowMapper} to map the root entities, must not be {@literal null}.\n@param expectedResults\n", "rootMapper", "childMapper", "childMapper", "childMapper", "rootMapper", "rootMapper", "expectedResults", "expectedResults", "ANY", "expectedResults", "An abstract results extractor for row mapping operations that map multiple rows to a single root object. This is\nuseful when joining a one-to-many relationship where there can be multiple child rows returned per parent root.\n\u003cp\u003e\nIt\u0027s assumed that the root type R table has a primary key (id) of type K and that the child type C table has a\nforeign key of type K referencing the root table\u0027s primary key.\n\u003cp\u003e\nFor example, consider the relationship: \"a Customer has one-to-many Addresses\". When joining the Customer table with\nthe Address table to build a Customer object, multiple rows would be returned for a Customer if it has more than one\nAddress. This extractor is useful in that case.\n\u003cp\u003e\nThis class comes from the Spring Data JDBC Extensions project that has been archived in 2019:\nhttps://github.com/spring-projects/spring-data-jdbc-ext", "An abstract results extractor for row mapping operations that map multiple rows to a single root object. This is\nuseful when joining a one-to-many relationship where there can be multiple child rows returned per parent root.\n\u003cp\u003e\nIt\u0027s assumed that the root type R table has a primary key (id) of type K and that the child type C table has a\nforeign key of type K referencing the root table\u0027s primary key.\n\u003cp\u003e\nFor example, consider the relationship: \"a Customer has one-to-many Addresses\". When joining the Customer table with\nthe Address table to build a Customer object, multiple rows would be returned for a Customer if it has more than one\nAddress. This extractor is useful in that case.\n\u003cp\u003e\nThis class comes from the Spring Data JDBC Extensions project that has been archived in 2019:\nhttps://github.com/spring-projects/spring-data-jdbc-ext\n\n@author Thomas Risberg\n@author Keith Donald\n@author Oliver Gierke\n@since 1.0\n"],
    "methods": ["getClass()", "mapPrimaryKey(java.sql.ResultSet)", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "mapForeignKey(java.sql.ResultSet)", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "extractData(java.sql.ResultSet)", "addChild(java.lang.Object,java.lang.Object)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JpaOwnerRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaOwnerRepositoryImpl.java",
    "referencedTypes": ["void", "org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "javax.persistence.Query", "java.lang.SuppressWarnings", "javax.persistence.PersistenceContext", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "\u003cnulltype\u003e", "int", "boolean", "org.springframework.stereotype.Repository", "javax.persistence.EntityManager", "java.util.Collection", "java.lang.Override", "org.springframework.samples.petclinic.repository.OwnerRepository"],
    "fieldTypes": ["javax.persistence.EntityManager"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "int", "java.lang.String"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "void", "org.springframework.samples.petclinic.model.Owner", "int", "java.util.Collection", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.OwnerRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl()"],
    "textAndNames": ["JpaOwnerRepositoryImpl", "em", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "owner", "save", "", "owner", "em", "owner", "em", "owner", "notify", "", "id", "findById", "", "em", "query", "id", "query", "hashCode", "", "lastName", "findByLastName", "Important: in the current version of this method, we load Owners with all their Pets and Visits while\nwe do not need Visits at all and we only need one property from the Pet objects (the \u0027name\u0027 property).\nThere are some ways to improve it such as:\n- creating a Ligtweight class (example here: https://community.jboss.org/wiki/LightweightClass)\n- Turning on lazy-loading and using {@link OpenSessionInViewFilter}", "Important: in the current version of this method, we load Owners with all their Pets and Visits while\nwe do not need Visits at all and we only need one property from the Pet objects (the \u0027name\u0027 property).\nThere are some ways to improve it such as:\n- creating a Ligtweight class (example here: https://community.jboss.org/wiki/LightweightClass)\n- Turning on lazy-loading and using {@link OpenSessionInViewFilter}\n", "em", "query", "lastName", "query", "finalize", "", "toString", "", "clone", "", "", "JPA implementation of the {@link OwnerRepository} interface.", "JPA implementation of the {@link OwnerRepository} interface.\n\n@author Mike Keith\n@author Rod Johnson\n@author Sam Brannen\n@author Michael Isvy\n@since 22.4.2006\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "save(org.springframework.samples.petclinic.model.Owner)", "notify()", "findById(int)", "hashCode()", "findByLastName(java.lang.String)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JpaPetRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaPetRepositoryImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "void", "java.lang.Object", "java.lang.SuppressWarnings", "javax.persistence.PersistenceContext", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl", "org.springframework.samples.petclinic.repository.PetRepository", "org.springframework.samples.petclinic.model.PetType", "\u003cnulltype\u003e", "int", "boolean", "org.springframework.stereotype.Repository", "javax.persistence.EntityManager", "java.util.List", "java.lang.Override"],
    "fieldTypes": ["javax.persistence.EntityManager"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.samples.petclinic.model.Pet", "int"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "java.util.List", "void", "void", "void", "org.springframework.samples.petclinic.model.Pet", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.PetRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl()"],
    "textAndNames": ["JpaPetRepositoryImpl", "em", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "findPetTypes", "", "em", "registerNatives", "", "pet", "save", "", "pet", "em", "pet", "em", "pet", "notify", "", "id", "findById", "", "em", "class", "id", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "JPA implementation of the {@link PetRepository} interface.", "JPA implementation of the {@link PetRepository} interface.\n\n@author Mike Keith\n@author Rod Johnson\n@author Sam Brannen\n@author Michael Isvy\n@since 22.4.2006\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "findPetTypes()", "registerNatives()", "save(org.springframework.samples.petclinic.model.Pet)", "notify()", "findById(int)", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JpaVetRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVetRepositoryImpl.java",
    "referencedTypes": ["org.springframework.stereotype.Repository", "javax.persistence.EntityManager", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl", "java.lang.Object", "java.lang.SuppressWarnings", "org.springframework.samples.petclinic.model.Vet", "javax.persistence.PersistenceContext", "java.lang.String", "java.util.Collection", "java.lang.Override"],
    "fieldTypes": ["javax.persistence.EntityManager"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "java.util.Collection", "void", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VetRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl()"],
    "textAndNames": ["JpaVetRepositoryImpl", "em", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "findAll", "", "em", "notify", "", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "JPA implementation of the {@link VetRepository} interface.", "JPA implementation of the {@link VetRepository} interface.\n\n@author Mike Keith\n@author Rod Johnson\n@author Sam Brannen\n@author Michael Isvy\n@since 22.4.2006\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "findAll()", "notify()", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "JpaVisitRepositoryImpl",
    "fullName": "org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/jpa/JpaVisitRepositoryImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "void", "java.lang.Object", "javax.persistence.Query", "java.lang.SuppressWarnings", "javax.persistence.PersistenceContext", "java.lang.String", "org.springframework.samples.petclinic.repository.VisitRepository", "org.springframework.samples.petclinic.model.BaseEntity", "\u003cnulltype\u003e", "java.lang.Integer", "boolean", "org.springframework.stereotype.Repository", "javax.persistence.EntityManager", "java.util.List", "java.lang.Override", "org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl"],
    "fieldTypes": ["javax.persistence.EntityManager"],
    "parameterTypes": ["long", "long", "int", "java.lang.Integer", "java.lang.Object", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.util.List", "void", "boolean", "void", "void", "void", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VisitRepository"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl()"],
    "textAndNames": ["JpaVisitRepositoryImpl", "em", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "petId", "findByPetId", "", "em", "query", "petId", "query", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "visit", "save", "", "visit", "em", "visit", "em", "visit", "notify", "", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "JPA implementation of the ClinicService interface using EntityManager.\n\u003cp/\u003e\n\u003cp\u003eThe mappings are defined in \"orm.xml\" located in the META-INF directory.", "JPA implementation of the ClinicService interface using EntityManager.\n\u003cp/\u003e\n\u003cp\u003eThe mappings are defined in \"orm.xml\" located in the META-INF directory.\n\n@author Mike Keith\n@author Rod Johnson\n@author Sam Brannen\n@author Michael Isvy\n@since 22.4.2006\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "findByPetId(java.lang.Integer)", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "save(org.springframework.samples.petclinic.model.Visit)", "notify()", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "SpringDataOwnerRepository",
    "fullName": "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataOwnerRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository", "java.lang.Integer", "int", "org.springframework.data.repository.Repository", "org.springframework.samples.petclinic.model.Owner", "org.springframework.data.jpa.repository.Query", "java.lang.String", "java.util.Collection", "org.springframework.data.repository.query.Param", "java.lang.Override", "org.springframework.samples.petclinic.repository.OwnerRepository"],
    "fieldTypes": [],
    "parameterTypes": ["int", "java.lang.String", "org.springframework.samples.petclinic.model.Owner"],
    "returnTypes": ["org.springframework.samples.petclinic.model.Owner", "java.util.Collection", "void"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.OwnerRepository", "org.springframework.data.repository.Repository"],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["SpringDataOwnerRepository", "id", "findById", "", "lastName", "findByLastName", "", "owner", "save", "Save an \u003ccode\u003eOwner\u003c/code\u003e to the data store, either inserting or updating it.", "Save an \u003ccode\u003eOwner\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param owner\n\t\tthe \u003ccode\u003eOwner\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Spring Data JPA specialization of the {@link OwnerRepository} interface", "Spring Data JPA specialization of the {@link OwnerRepository} interface\n\n@author Michael Isvy\n@since 15.1.2013\n"],
    "methods": ["findById(int)", "findByLastName(java.lang.String)", "save(org.springframework.samples.petclinic.model.Owner)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "SpringDataPetRepository",
    "fullName": "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataPetRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "java.lang.Integer", "org.springframework.data.repository.Repository", "org.springframework.data.jpa.repository.Query", "java.lang.String", "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository", "org.springframework.samples.petclinic.repository.PetRepository", "java.util.List", "java.lang.Override", "org.springframework.samples.petclinic.model.PetType"],
    "fieldTypes": [],
    "parameterTypes": ["int", "org.springframework.samples.petclinic.model.Pet"],
    "returnTypes": ["org.springframework.samples.petclinic.model.Pet", "java.util.List", "void"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.PetRepository", "org.springframework.data.repository.Repository"],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["SpringDataPetRepository", "id", "findById", "Retrieve a \u003ccode\u003ePet\u003c/code\u003e from the data store by id.", "Retrieve a \u003ccode\u003ePet\u003c/code\u003e from the data store by id.\n\n@param id\n\t\tthe id to search for\n@return the \u003ccode\u003ePet\u003c/code\u003e if found\n@throws org.springframework.dao.DataRetrievalFailureException\n\t\tif not found\n", "findPetTypes", "", "pet", "save", "Save a \u003ccode\u003ePet\u003c/code\u003e to the data store, either inserting or updating it.", "Save a \u003ccode\u003ePet\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param pet\n\t\tthe \u003ccode\u003ePet\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Spring Data JPA specialization of the {@link PetRepository} interface", "Spring Data JPA specialization of the {@link PetRepository} interface\n\n@author Michael Isvy\n@since 15.1.2013\n"],
    "methods": ["findById(int)", "findPetTypes()", "save(org.springframework.samples.petclinic.model.Pet)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "SpringDataVetRepository",
    "fullName": "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVetRepository.java",
    "referencedTypes": ["java.lang.Integer", "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository", "org.springframework.data.repository.Repository", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.model.Vet"],
    "fieldTypes": [],
    "parameterTypes": [],
    "returnTypes": ["java.util.Collection"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.data.repository.Repository"],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["SpringDataVetRepository", "findAll", "Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.", "Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.\n\n@return a \u003ccode\u003eCollection\u003c/code\u003e of \u003ccode\u003eVet\u003c/code\u003es\n", "Spring Data JPA specialization of the {@link VetRepository} interface", "Spring Data JPA specialization of the {@link VetRepository} interface\n\n@author Michael Isvy\n@since 15.1.2013\n"],
    "methods": ["findAll()"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "SpringDataVisitRepository",
    "fullName": "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/springdatajpa/SpringDataVisitRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "java.lang.Integer", "org.springframework.data.repository.Repository", "org.springframework.samples.petclinic.repository.VisitRepository", "org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository"],
    "fieldTypes": [],
    "parameterTypes": ["java.lang.Integer", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.util.List", "void"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.repository.VisitRepository", "org.springframework.data.repository.Repository"],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["SpringDataVisitRepository", "petId", "findByPetId", "", "visit", "save", "Save a \u003ccode\u003eVisit\u003c/code\u003e to the data store, either inserting or updating it.", "Save a \u003ccode\u003eVisit\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param visit\n\t\tthe \u003ccode\u003eVisit\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Spring Data JPA specialization of the {@link VisitRepository} interface", "Spring Data JPA specialization of the {@link VisitRepository} interface\n\n@author Michael Isvy\n@since 15.1.2013\n"],
    "methods": ["findByPetId(java.lang.Integer)", "save(org.springframework.samples.petclinic.model.Visit)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "OwnerRepository",
    "fullName": "org.springframework.samples.petclinic.repository.OwnerRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/OwnerRepository.java",
    "referencedTypes": ["int", "void", "org.springframework.samples.petclinic.model.Owner", "java.util.Collection", "java.lang.String", "org.springframework.samples.petclinic.repository.OwnerRepository"],
    "fieldTypes": [],
    "parameterTypes": ["int", "java.lang.String", "org.springframework.samples.petclinic.model.Owner"],
    "returnTypes": ["org.springframework.samples.petclinic.model.Owner", "java.util.Collection", "void"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["OwnerRepository", "id", "findById", "Retrieve an \u003ccode\u003eOwner\u003c/code\u003e from the data store by id.", "Retrieve an \u003ccode\u003eOwner\u003c/code\u003e from the data store by id.\n\n@param id\n\t\tthe id to search for\n@return the \u003ccode\u003eOwner\u003c/code\u003e if found\n@throws org.springframework.dao.DataRetrievalFailureException\n\t\tif not found\n", "lastName", "findByLastName", "Retrieve \u003ccode\u003eOwner\u003c/code\u003es from the data store by last name, returning all owners whose last name \u003ci\u003estarts\u003c/i\u003e\nwith the given name.", "Retrieve \u003ccode\u003eOwner\u003c/code\u003es from the data store by last name, returning all owners whose last name \u003ci\u003estarts\u003c/i\u003e\nwith the given name.\n\n@param lastName\n\t\tValue to search for\n@return a \u003ccode\u003eCollection\u003c/code\u003e of matching \u003ccode\u003eOwner\u003c/code\u003es (or an empty \u003ccode\u003eCollection\u003c/code\u003e if none\nfound)\n", "owner", "save", "Save an \u003ccode\u003eOwner\u003c/code\u003e to the data store, either inserting or updating it.", "Save an \u003ccode\u003eOwner\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param owner\n\t\tthe \u003ccode\u003eOwner\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Repository class for \u003ccode\u003eOwner\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation", "Repository class for \u003ccode\u003eOwner\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Michael Isvy\n"],
    "methods": ["findById(int)", "findByLastName(java.lang.String)", "save(org.springframework.samples.petclinic.model.Owner)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetRepository",
    "fullName": "org.springframework.samples.petclinic.repository.PetRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/PetRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "int", "void", "org.springframework.samples.petclinic.repository.PetRepository", "java.util.List", "org.springframework.samples.petclinic.model.PetType"],
    "fieldTypes": [],
    "parameterTypes": ["int", "org.springframework.samples.petclinic.model.Pet"],
    "returnTypes": ["org.springframework.samples.petclinic.model.Pet", "java.util.List", "void"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["PetRepository", "id", "findById", "Retrieve a \u003ccode\u003ePet\u003c/code\u003e from the data store by id.", "Retrieve a \u003ccode\u003ePet\u003c/code\u003e from the data store by id.\n\n@param id\n\t\tthe id to search for\n@return the \u003ccode\u003ePet\u003c/code\u003e if found\n@throws org.springframework.dao.DataRetrievalFailureException\n\t\tif not found\n", "findPetTypes", "Retrieve all \u003ccode\u003ePetType\u003c/code\u003es from the data store.", "Retrieve all \u003ccode\u003ePetType\u003c/code\u003es from the data store.\n\n@return a \u003ccode\u003eCollection\u003c/code\u003e of \u003ccode\u003ePetType\u003c/code\u003es\n", "pet", "save", "Save a \u003ccode\u003ePet\u003c/code\u003e to the data store, either inserting or updating it.", "Save a \u003ccode\u003ePet\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param pet\n\t\tthe \u003ccode\u003ePet\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Repository class for \u003ccode\u003ePet\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation", "Repository class for \u003ccode\u003ePet\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Michael Isvy\n"],
    "methods": ["findById(int)", "findPetTypes()", "save(org.springframework.samples.petclinic.model.Pet)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "VetRepository",
    "fullName": "org.springframework.samples.petclinic.repository.VetRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/VetRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.model.Vet", "java.util.Collection"],
    "fieldTypes": [],
    "parameterTypes": [],
    "returnTypes": ["java.util.Collection"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["VetRepository", "findAll", "Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.", "Retrieve all \u003ccode\u003eVet\u003c/code\u003es from the data store.\n\n@return a \u003ccode\u003eCollection\u003c/code\u003e of \u003ccode\u003eVet\u003c/code\u003es\n", "Repository class for \u003ccode\u003eVet\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation", "Repository class for \u003ccode\u003eVet\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Michael Isvy\n"],
    "methods": ["findAll()"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "VisitRepository",
    "fullName": "org.springframework.samples.petclinic.repository.VisitRepository",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/repository/VisitRepository.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "java.lang.Integer", "void", "org.springframework.samples.petclinic.repository.VisitRepository", "java.util.List"],
    "fieldTypes": [],
    "parameterTypes": ["java.lang.Integer", "org.springframework.samples.petclinic.model.Visit"],
    "returnTypes": ["java.util.List", "void"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["VisitRepository", "petId", "findByPetId", "", "visit", "save", "Save a \u003ccode\u003eVisit\u003c/code\u003e to the data store, either inserting or updating it.", "Save a \u003ccode\u003eVisit\u003c/code\u003e to the data store, either inserting or updating it.\n\n@param visit\n\t\tthe \u003ccode\u003eVisit\u003c/code\u003e to save\n@see BaseEntity#isNew\n", "Repository class for \u003ccode\u003eVisit\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation", "Repository class for \u003ccode\u003eVisit\u003c/code\u003e domain objects All method names are compliant with Spring Data naming\nconventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation\n\n@author Ken Krebs\n@author Juergen Hoeller\n@author Sam Brannen\n@author Michael Isvy\n"],
    "methods": ["findByPetId(java.lang.Integer)", "save(org.springframework.samples.petclinic.model.Visit)"],
    "appName": "petclinic"
  }, {
    "isInterface": true,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "ClinicService",
    "fullName": "org.springframework.samples.petclinic.service.ClinicService",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/service/ClinicService.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.model.Visit", "void", "org.springframework.samples.petclinic.model.Owner", "org.springframework.samples.petclinic.model.Vet", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "int", "org.springframework.samples.petclinic.service.ClinicService", "java.util.Collection", "java.util.Collection", "java.util.Collection", "java.util.Collection"],
    "fieldTypes": [],
    "parameterTypes": ["int", "int", "org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.model.Visit", "int", "org.springframework.samples.petclinic.model.Owner", "java.lang.String"],
    "returnTypes": ["org.springframework.samples.petclinic.model.Owner", "org.springframework.samples.petclinic.model.Pet", "void", "java.util.Collection", "void", "java.util.Collection", "java.util.Collection", "void", "java.util.Collection"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": [],
    "textAndNames": ["ClinicService", "id", "findOwnerById", "", "id", "findPetById", "", "pet", "savePet", "", "findPetTypes", "", "visit", "saveVisit", "", "petId", "findVisitsByPetId", "", "findVets", "", "owner", "saveOwner", "", "lastName", "findOwnerByLastName", "", "Mostly used as a facade so all controllers have a single point of entry", "Mostly used as a facade so all controllers have a single point of entry\n\n@author Michael Isvy\n"],
    "methods": ["findOwnerById(int)", "findPetById(int)", "savePet(org.springframework.samples.petclinic.model.Pet)", "findPetTypes()", "saveVisit(org.springframework.samples.petclinic.model.Visit)", "findVisitsByPetId(int)", "findVets()", "saveOwner(org.springframework.samples.petclinic.model.Owner)", "findOwnerByLastName(java.lang.String)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "ClinicServiceImpl",
    "fullName": "org.springframework.samples.petclinic.service.ClinicServiceImpl",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/service/ClinicServiceImpl.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.model.Pet", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "org.springframework.cache.annotation.Cacheable", "org.springframework.samples.petclinic.model.Vet", "java.lang.String", "org.springframework.samples.petclinic.repository.VisitRepository", "org.springframework.samples.petclinic.model.PetType", "org.springframework.beans.factory.annotation.Autowired", "java.lang.Override", "org.springframework.samples.petclinic.repository.OwnerRepository", "org.springframework.samples.petclinic.service.ClinicServiceImpl", "void", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.stereotype.Service", "org.springframework.samples.petclinic.repository.PetRepository", "int", "boolean", "org.springframework.samples.petclinic.service.ClinicService", "java.util.Collection", "java.util.Collection", "java.util.Collection", "java.util.Collection", "org.springframework.transaction.annotation.Transactional"],
    "fieldTypes": ["org.springframework.samples.petclinic.repository.PetRepository", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.repository.OwnerRepository", "org.springframework.samples.petclinic.repository.VisitRepository"],
    "parameterTypes": ["long", "long", "int", "org.springframework.samples.petclinic.model.Pet", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "java.lang.String", "int", "int", "org.springframework.samples.petclinic.model.Visit", "int", "org.springframework.samples.petclinic.repository.PetRepository", "org.springframework.samples.petclinic.repository.VetRepository", "org.springframework.samples.petclinic.repository.OwnerRepository", "org.springframework.samples.petclinic.repository.VisitRepository"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "void", "boolean", "java.util.Collection", "void", "java.util.Collection", "void", "void", "java.util.Collection", "org.springframework.samples.petclinic.model.Owner", "int", "org.springframework.samples.petclinic.model.Pet", "void", "void", "java.lang.String", "java.lang.Object", "java.util.Collection"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.samples.petclinic.service.ClinicService"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.service.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository,org.springframework.samples.petclinic.repository.VetRepository,org.springframework.samples.petclinic.repository.OwnerRepository,org.springframework.samples.petclinic.repository.VisitRepository)"],
    "textAndNames": ["ClinicServiceImpl", "petRepository", "vetRepository", "ownerRepository", "visitRepository", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "pet", "savePet", "", "petRepository", "pet", "notifyAll", "", "arg0", "equals", "", "findPetTypes", "", "petRepository", "registerNatives", "", "findVets", "", "vetRepository", "notify", "", "owner", "saveOwner", "", "ownerRepository", "owner", "lastName", "findOwnerByLastName", "", "ownerRepository", "lastName", "id", "findOwnerById", "", "ownerRepository", "id", "hashCode", "", "id", "findPetById", "", "petRepository", "id", "visit", "saveVisit", "", "visitRepository", "visit", "finalize", "", "toString", "", "clone", "", "petId", "findVisitsByPetId", "", "visitRepository", "petId", "", "petRepository", "petRepository", "vetRepository", "vetRepository", "ownerRepository", "ownerRepository", "visitRepository", "visitRepository", "Mostly used as a facade for all Petclinic controllers\nAlso a placeholder for @Transactional and @Cacheable annotations", "Mostly used as a facade for all Petclinic controllers\nAlso a placeholder for @Transactional and @Cacheable annotations\n\n@author Michael Isvy\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "savePet(org.springframework.samples.petclinic.model.Pet)", "notifyAll()", "equals(java.lang.Object)", "findPetTypes()", "registerNatives()", "findVets()", "notify()", "saveOwner(org.springframework.samples.petclinic.model.Owner)", "findOwnerByLastName(java.lang.String)", "findOwnerById(int)", "hashCode()", "findPetById(int)", "saveVisit(org.springframework.samples.petclinic.model.Visit)", "finalize()", "toString()", "clone()", "findVisitsByPetId(int)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "CallMonitoringAspect",
    "fullName": "org.springframework.samples.petclinic.util.CallMonitoringAspect",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/util/CallMonitoringAspect.java",
    "referencedTypes": ["void", "java.lang.Object", "java.lang.String", "org.aspectj.lang.annotation.Around", "org.springframework.util.StopWatch", "org.springframework.jmx.export.annotation.ManagedResource", "org.aspectj.lang.annotation.Aspect", "org.springframework.jmx.export.annotation.ManagedAttribute", "org.springframework.samples.petclinic.util.CallMonitoringAspect", "long", "org.springframework.jmx.export.annotation.ManagedOperation", "org.aspectj.lang.ProceedingJoinPoint", "int", "boolean", "java.lang.Throwable"],
    "fieldTypes": ["boolean", "int", "long"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.aspectj.lang.ProceedingJoinPoint", "boolean"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "void", "boolean", "void", "java.lang.Object", "void", "void", "int", "long", "boolean", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.util.CallMonitoringAspect()"],
    "textAndNames": ["CallMonitoringAspect", "enabled", "callCount", "accumulatedCallTime", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "reset", "", "callCount", "accumulatedCallTime", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "joinPoint", "invoke", "", "enabled", "joinPoint", "sw", "joinPoint", "sw", "callCount", "accumulatedCallTime", "sw", "joinPoint", "notify", "", "enabled", "setEnabled", "", "enabled", "enabled", "hashCode", "", "getCallTime", "", "callCount", "accumulatedCallTime", "callCount", "isEnabled", "", "enabled", "getCallCount", "", "callCount", "finalize", "", "toString", "", "clone", "", "", "Simple aspect that monitors call count and call invocation time. It uses JMX annotations and therefore can be\nmonitored using any JMX console such as the jConsole\n\u003cp/\u003e\nThis is only useful if you use JPA or JDBC.  Spring-data-jpa doesn\u0027t have any correctly annotated classes to join on", "Simple aspect that monitors call count and call invocation time. It uses JMX annotations and therefore can be\nmonitored using any JMX console such as the jConsole\n\u003cp/\u003e\nThis is only useful if you use JPA or JDBC.  Spring-data-jpa doesn\u0027t have any correctly annotated classes to join on\n\n@author Rob Harrop\n@author Juergen Hoeller\n@author Michael Isvy\n@since 2.5\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "reset()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "invoke(org.aspectj.lang.ProceedingJoinPoint)", "notify()", "setEnabled(boolean)", "hashCode()", "getCallTime()", "isEnabled()", "getCallCount()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "EntityUtils",
    "fullName": "org.springframework.samples.petclinic.util.EntityUtils",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/util/EntityUtils.java",
    "referencedTypes": ["int", "boolean", "java.lang.Object", "java.util.Collection", "org.springframework.orm.ObjectRetrievalFailureException", "org.springframework.samples.petclinic.model.BaseEntity", "java.lang.Class", "java.lang.Class", "org.springframework.samples.petclinic.util.EntityUtils"],
    "fieldTypes": [],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.util.Collection", "java.lang.Class", "int"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "T", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.util.EntityUtils()"],
    "textAndNames": ["EntityUtils", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "entities", "entityClass", "entityId", "getById", "Look up the entity of the given class with the given id in the given collection.", "Look up the entity of the given class with the given id in the given collection.\n\n@param entities\n\t\tthe collection to search\n@param entityClass\n\t\tthe entity class to look up\n@param entityId\n\t\tthe entity id to look up\n@return the found entity\n@throws ObjectRetrievalFailureException\n\t\tif the entity was not found\n", "entities", "entity", "entityId", "entityClass", "entity", "entity", "entityClass", "entityId", "finalize", "", "toString", "", "clone", "", "", "Utility methods for handling entities. Separate from the BaseEntity class mainly because of dependency on the\nORM-associated ObjectRetrievalFailureException.", "Utility methods for handling entities. Separate from the BaseEntity class mainly because of dependency on the\nORM-associated ObjectRetrievalFailureException.\n\n@author Juergen Hoeller\n@author Sam Brannen\n@see org.springframework.samples.petclinic.model.BaseEntity\n@since 29.10.2003\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "getById(java.util.Collection,java.lang.Class,int)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "CrashController",
    "fullName": "org.springframework.samples.petclinic.web.CrashController",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/CrashController.java",
    "referencedTypes": ["org.springframework.web.bind.annotation.GetMapping", "java.lang.Object", "org.springframework.samples.petclinic.web.CrashController", "java.lang.String", "java.lang.RuntimeException", "org.springframework.stereotype.Controller"],
    "fieldTypes": [],
    "parameterTypes": ["long", "long", "int", "java.lang.Object"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "void", "java.lang.String", "java.lang.Object", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.CrashController()"],
    "textAndNames": ["CrashController", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "finalize", "", "toString", "", "clone", "", "triggerException", "", "", "Controller used to showcase what happens when an exception is thrown", "Controller used to showcase what happens when an exception is thrown\n\n@author Michael Isvy\n\u003cp/\u003e\nAlso see how the bean of type \u0027SimpleMappingExceptionResolver\u0027 has been declared inside\n/WEB-INF/mvc-core-config.xml\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "finalize()", "toString()", "clone()", "triggerException()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "OwnerController",
    "fullName": "org.springframework.samples.petclinic.web.OwnerController",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/OwnerController.java",
    "referencedTypes": ["java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "java.lang.String", "org.springframework.samples.petclinic.web.OwnerController", "org.springframework.web.servlet.ModelAndView", "org.springframework.beans.factory.annotation.Autowired", "org.springframework.samples.petclinic.web.PostMapping", "org.springframework.samples.petclinic.web.InitBinder", "java.util.Iterator", "void", "org.springframework.validation.BindingResult", "org.springframework.samples.petclinic.model.BaseEntity", "org.springframework.stereotype.Controller", "\u003cnulltype\u003e", "org.springframework.web.bind.WebDataBinder", "int", "org.springframework.samples.petclinic.web.GetMapping", "boolean", "org.springframework.samples.petclinic.service.ClinicService", "javax.validation.Valid", "java.util.Collection", "java.util.Collection", "org.springframework.ui.Model", "java.util.Map", "java.util.Map", "org.springframework.samples.petclinic.web.PathVariable", "org.springframework.samples.petclinic.model.Person"],
    "fieldTypes": ["java.lang.String", "org.springframework.samples.petclinic.service.ClinicService"],
    "parameterTypes": ["org.springframework.web.bind.WebDataBinder", "long", "long", "int", "org.springframework.samples.petclinic.model.Owner", "org.springframework.validation.BindingResult", "int", "java.lang.Object", "java.util.Map", "java.util.Map", "int", "org.springframework.ui.Model", "int", "org.springframework.samples.petclinic.model.Owner", "org.springframework.validation.BindingResult", "org.springframework.samples.petclinic.model.Owner", "org.springframework.validation.BindingResult", "java.util.Map", "org.springframework.samples.petclinic.service.ClinicService"],
    "returnTypes": ["void", "java.lang.Class", "void", "void", "void", "java.lang.String", "void", "boolean", "void", "void", "int", "java.lang.String", "java.lang.String", "java.lang.String", "org.springframework.web.servlet.ModelAndView", "void", "java.lang.String", "java.lang.Object", "java.lang.String", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.OwnerController(org.springframework.samples.petclinic.service.ClinicService)"],
    "textAndNames": ["OwnerController", "VIEWS_OWNER_CREATE_OR_UPDATE_FORM", "clinicService", "dataBinder", "setAllowedFields", "", "dataBinder", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "owner", "result", "ownerId", "processUpdateOwnerForm", "", "result", "VIEWS_OWNER_CREATE_OR_UPDATE_FORM", "owner", "ownerId", "clinicService", "owner", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "model", "initCreationForm", "", "model", "owner", "VIEWS_OWNER_CREATE_OR_UPDATE_FORM", "model", "initFindForm", "", "model", "ownerId", "model", "initUpdateOwnerForm", "", "clinicService", "ownerId", "model", "owner", "VIEWS_OWNER_CREATE_OR_UPDATE_FORM", "ownerId", "showOwner", "Custom handler for displaying an owner.", "Custom handler for displaying an owner.\n\n@param ownerId\n\t\tthe ID of the owner to display\n@return a ModelMap with the model attributes for the view\n", "mav", "clinicService", "ownerId", "mav", "finalize", "", "toString", "", "clone", "", "owner", "result", "processCreationForm", "", "result", "VIEWS_OWNER_CREATE_OR_UPDATE_FORM", "clinicService", "owner", "owner", "owner", "result", "model", "processFindForm", "", "owner", "owner", "clinicService", "owner", "results", "result", "results", "owner", "results", "owner", "model", "results", "", "clinicService", "clinicService", "", "\n@author Juergen Hoeller\n@author Ken Krebs\n@author Arjen Poutsma\n@author Michael Isvy\n"],
    "methods": ["setAllowedFields(org.springframework.web.bind.WebDataBinder)", "getClass()", "wait(long)", "wait(long,int)", "wait()", "processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "initCreationForm(java.util.Map)", "initFindForm(java.util.Map)", "initUpdateOwnerForm(int,org.springframework.ui.Model)", "showOwner(int)", "finalize()", "toString()", "clone()", "processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)", "processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetController",
    "fullName": "org.springframework.samples.petclinic.web.PetController",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetController.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "org.springframework.samples.petclinic.web.PetController", "java.lang.Object", "org.springframework.samples.petclinic.model.Owner", "org.springframework.samples.petclinic.web.PetValidator", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "org.springframework.samples.petclinic.web.ModelAttribute", "org.springframework.beans.factory.annotation.Autowired", "org.springframework.samples.petclinic.web.PostMapping", "org.springframework.util.StringUtils", "org.springframework.samples.petclinic.web.InitBinder", "org.springframework.ui.ModelMap", "void", "org.springframework.validation.BindingResult", "org.springframework.samples.petclinic.model.BaseEntity", "org.springframework.stereotype.Controller", "\u003cnulltype\u003e", "org.springframework.samples.petclinic.web.RequestMapping", "org.springframework.web.bind.WebDataBinder", "int", "org.springframework.samples.petclinic.web.GetMapping", "boolean", "org.springframework.samples.petclinic.model.NamedEntity", "org.springframework.samples.petclinic.service.ClinicService", "javax.validation.Valid", "java.util.Collection", "org.springframework.samples.petclinic.web.PathVariable"],
    "fieldTypes": ["java.lang.String", "org.springframework.samples.petclinic.service.ClinicService"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "org.springframework.samples.petclinic.model.Pet", "org.springframework.validation.BindingResult", "org.springframework.samples.petclinic.model.Owner", "org.springframework.ui.ModelMap", "org.springframework.web.bind.WebDataBinder", "org.springframework.web.bind.WebDataBinder", "org.springframework.samples.petclinic.model.Owner", "org.springframework.ui.ModelMap", "int", "org.springframework.ui.ModelMap", "int", "org.springframework.samples.petclinic.model.Owner", "org.springframework.samples.petclinic.model.Pet", "org.springframework.validation.BindingResult", "org.springframework.ui.ModelMap", "org.springframework.samples.petclinic.service.ClinicService"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "java.lang.String", "void", "void", "int", "void", "java.lang.String", "java.lang.String", "java.util.Collection", "org.springframework.samples.petclinic.model.Owner", "void", "java.lang.String", "java.lang.Object", "java.lang.String"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.PetController(org.springframework.samples.petclinic.service.ClinicService)"],
    "textAndNames": ["PetController", "VIEWS_PETS_CREATE_OR_UPDATE_FORM", "clinicService", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "pet", "result", "owner", "model", "processUpdateForm", "", "result", "model", "pet", "VIEWS_PETS_CREATE_OR_UPDATE_FORM", "owner", "pet", "clinicService", "pet", "notify", "", "dataBinder", "initOwnerBinder", "", "dataBinder", "hashCode", "", "dataBinder", "initPetBinder", "", "dataBinder", "owner", "model", "initCreationForm", "", "owner", "pet", "model", "pet", "VIEWS_PETS_CREATE_OR_UPDATE_FORM", "petId", "model", "initUpdateForm", "", "clinicService", "petId", "model", "pet", "VIEWS_PETS_CREATE_OR_UPDATE_FORM", "populatePetTypes", "", "clinicService", "ownerId", "findOwner", "", "clinicService", "ownerId", "finalize", "", "toString", "", "clone", "", "owner", "pet", "result", "model", "processCreationForm", "", "pet", "pet", "owner", "pet", "result", "result", "model", "pet", "VIEWS_PETS_CREATE_OR_UPDATE_FORM", "owner", "pet", "clinicService", "pet", "", "clinicService", "clinicService", "", "\n@author Juergen Hoeller\n@author Ken Krebs\n@author Arjen Poutsma\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)", "notify()", "initOwnerBinder(org.springframework.web.bind.WebDataBinder)", "hashCode()", "initPetBinder(org.springframework.web.bind.WebDataBinder)", "initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)", "initUpdateForm(int,org.springframework.ui.ModelMap)", "populatePetTypes()", "findOwner(int)", "finalize()", "toString()", "clone()", "processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetTypeFormatter",
    "fullName": "org.springframework.samples.petclinic.web.PetTypeFormatter",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetTypeFormatter.java",
    "referencedTypes": ["java.util.Locale", "java.lang.Object", "org.springframework.format.Formatter", "java.lang.String", "org.springframework.samples.petclinic.model.PetType", "int", "org.springframework.samples.petclinic.model.NamedEntity", "org.springframework.samples.petclinic.service.ClinicService", "org.springframework.beans.factory.annotation.Autowired", "java.util.Collection", "java.text.ParseException", "java.lang.Override", "org.springframework.samples.petclinic.web.PetTypeFormatter"],
    "fieldTypes": ["org.springframework.samples.petclinic.service.ClinicService"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.lang.String", "java.util.Locale", "org.springframework.samples.petclinic.model.PetType", "java.util.Locale", "org.springframework.samples.petclinic.service.ClinicService"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "org.springframework.samples.petclinic.model.PetType", "void", "java.lang.String", "int", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.format.Formatter"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)"],
    "textAndNames": ["PetTypeFormatter", "clinicService", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "text", "locale", "parse", "", "clinicService", "findPetTypes", "type", "text", "type", "text", "notify", "", "petType", "locale", "print", "", "petType", "hashCode", "", "finalize", "", "toString", "", "clone", "", "", "clinicService", "clinicService", "Instructs Spring MVC on how to parse and print elements of type \u0027PetType\u0027. Starting from Spring 3.0, Formatters have\ncome as an improvement in comparison to legacy PropertyEditors. See the following links for more details: - The\nSpring ref doc: http://static.springsource.org/spring/docs/current/spring-framework-reference/html/validation.html#format-Formatter-SPI\n- A nice blog entry from Gordon Dickens: http://gordondickens.com/wordpress/2010/09/30/using-spring-3-0-custom-type-converter/\n\u003cp/\u003e\nAlso see how the bean \u0027conversionService\u0027 has been declared inside /WEB-INF/mvc-core-config.xml", "Instructs Spring MVC on how to parse and print elements of type \u0027PetType\u0027. Starting from Spring 3.0, Formatters have\ncome as an improvement in comparison to legacy PropertyEditors. See the following links for more details: - The\nSpring ref doc: http://static.springsource.org/spring/docs/current/spring-framework-reference/html/validation.html#format-Formatter-SPI\n- A nice blog entry from Gordon Dickens: http://gordondickens.com/wordpress/2010/09/30/using-spring-3-0-custom-type-converter/\n\u003cp/\u003e\nAlso see how the bean \u0027conversionService\u0027 has been declared inside /WEB-INF/mvc-core-config.xml\n\n@author Mark Fisher\n@author Juergen Hoeller\n@author Michael Isvy\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "parse(java.lang.String,java.util.Locale)", "notify()", "print(org.springframework.samples.petclinic.model.PetType,java.util.Locale)", "hashCode()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetValidator",
    "fullName": "org.springframework.samples.petclinic.web.PetValidator",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/PetValidator.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Pet", "void", "org.springframework.samples.petclinic.web.PetValidator", "java.lang.Object", "java.lang.String", "org.springframework.samples.petclinic.model.BaseEntity", "\u003cnulltype\u003e", "boolean", "org.springframework.samples.petclinic.model.NamedEntity", "org.springframework.validation.Errors", "org.springframework.util.StringUtils", "java.lang.Class", "java.lang.Class", "java.lang.Override", "org.springframework.validation.Validator"],
    "fieldTypes": ["java.lang.String"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object", "java.lang.Class", "java.lang.Object", "org.springframework.validation.Errors"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "void", "boolean", "void", "void", "int", "boolean", "void", "java.lang.String", "java.lang.Object", "void"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.validation.Validator"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.PetValidator()"],
    "textAndNames": ["PetValidator", "REQUIRED", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "clazz", "supports", "This Validator validates *just* Pet instances", "This Validator validates *just* Pet instances\n", "class", "clazz", "finalize", "", "toString", "", "clone", "", "obj", "errors", "validate", "", "obj", "pet", "name", "errors", "REQUIRED", "REQUIRED", "pet", "pet", "errors", "REQUIRED", "REQUIRED", "pet", "errors", "REQUIRED", "REQUIRED", "", "\u003ccode\u003eValidator\u003c/code\u003e for \u003ccode\u003ePet\u003c/code\u003e forms.\n\u003cp\u003e\nWe\u0027re not using Bean Validation annotations here because it is easier to define such validation rule in Java.\n\u003c/p\u003e", "\u003ccode\u003eValidator\u003c/code\u003e for \u003ccode\u003ePet\u003c/code\u003e forms.\n\u003cp\u003e\nWe\u0027re not using Bean Validation annotations here because it is easier to define such validation rule in Java.\n\u003c/p\u003e\n\n@author Ken Krebs\n@author Juergen Hoeller\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "supports(java.lang.Class)", "finalize()", "toString()", "clone()", "validate(java.lang.Object,org.springframework.validation.Errors)"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "VetController",
    "fullName": "org.springframework.samples.petclinic.web.VetController",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/VetController.java",
    "referencedTypes": ["java.lang.Object", "org.springframework.samples.petclinic.model.Vets", "java.lang.String", "org.springframework.web.bind.annotation.ResponseBody", "org.springframework.samples.petclinic.web.VetController", "org.springframework.stereotype.Controller", "org.springframework.web.bind.annotation.GetMapping", "org.springframework.samples.petclinic.service.ClinicService", "org.springframework.beans.factory.annotation.Autowired", "org.springframework.http.MediaType", "java.util.List", "java.util.Map", "java.util.Map"],
    "fieldTypes": ["org.springframework.samples.petclinic.service.ClinicService"],
    "parameterTypes": ["long", "long", "int", "java.util.Map", "java.lang.Object", "org.springframework.samples.petclinic.service.ClinicService"],
    "returnTypes": ["java.lang.Class", "org.springframework.samples.petclinic.model.Vets", "void", "void", "void", "org.springframework.samples.petclinic.model.Vets", "java.lang.String", "void", "boolean", "void", "void", "int", "org.springframework.samples.petclinic.model.Vets", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.VetController(org.springframework.samples.petclinic.service.ClinicService)"],
    "textAndNames": ["VetController", "clinicService", "getClass", "", "showXmlVetList", "", "APPLICATION_XML_VALUE", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getVets", "", "vets", "clinicService", "vets", "model", "showVetList", "", "model", "vets", "notifyAll", "", "arg0", "equals", "", "registerNatives", "", "notify", "", "hashCode", "", "showJsonVetList", "", "APPLICATION_JSON_VALUE", "finalize", "", "toString", "", "clone", "", "", "clinicService", "clinicService", "", "\n@author Juergen Hoeller\n@author Mark Fisher\n@author Ken Krebs\n@author Arjen Poutsma\n"],
    "methods": ["getClass()", "showXmlVetList()", "wait(long)", "wait(long,int)", "wait()", "getVets()", "showVetList(java.util.Map)", "notifyAll()", "equals(java.lang.Object)", "registerNatives()", "notify()", "hashCode()", "showJsonVetList()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "VisitController",
    "fullName": "org.springframework.samples.petclinic.web.VisitController",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/web/VisitController.java",
    "referencedTypes": ["org.springframework.samples.petclinic.model.Visit", "org.springframework.samples.petclinic.model.Pet", "void", "org.springframework.validation.BindingResult", "java.lang.Object", "java.lang.String", "org.springframework.stereotype.Controller", "org.springframework.samples.petclinic.web.ModelAttribute", "org.springframework.web.bind.WebDataBinder", "int", "org.springframework.samples.petclinic.web.GetMapping", "org.springframework.samples.petclinic.service.ClinicService", "javax.validation.Valid", "org.springframework.beans.factory.annotation.Autowired", "org.springframework.samples.petclinic.web.PostMapping", "org.springframework.samples.petclinic.web.InitBinder", "org.springframework.samples.petclinic.web.PathVariable", "java.util.Map", "java.util.Map", "org.springframework.samples.petclinic.web.VisitController"],
    "fieldTypes": ["org.springframework.samples.petclinic.service.ClinicService"],
    "parameterTypes": ["org.springframework.web.bind.WebDataBinder", "long", "long", "int", "int", "java.util.Map", "java.lang.Object", "org.springframework.samples.petclinic.model.Visit", "org.springframework.validation.BindingResult", "int", "int", "java.util.Map", "org.springframework.samples.petclinic.service.ClinicService"],
    "returnTypes": ["void", "java.lang.Class", "void", "void", "void", "void", "java.lang.String", "boolean", "void", "java.lang.String", "void", "int", "org.springframework.samples.petclinic.model.Visit", "java.lang.String", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": [],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.web.VisitController(org.springframework.samples.petclinic.service.ClinicService)"],
    "textAndNames": ["VisitController", "clinicService", "dataBinder", "setAllowedFields", "", "dataBinder", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "notifyAll", "", "petId", "model", "initNewVisitForm", "Spring MVC calls method loadPetWithVisit(...) before initNewVisitForm is called", "", "arg0", "equals", "", "registerNatives", "", "visit", "result", "processNewVisitForm", "Spring MVC calls method loadPetWithVisit(...) before processNewVisitForm is called", "", "result", "clinicService", "visit", "notify", "", "hashCode", "", "petId", "loadPetWithVisit", "Called before each and every @GetMapping or @PostMapping annotated method.\n2 goals:\n- Make sure we always have fresh data\n- Since we do not use the session scope, make sure that Pet object always has an id\n(Even though id is not part of the form fields)", "Called before each and every @GetMapping or @PostMapping annotated method.\n2 goals:\n- Make sure we always have fresh data\n- Since we do not use the session scope, make sure that Pet object always has an id\n(Even though id is not part of the form fields)\n\n@param petId\n@return Pet\n", "clinicService", "petId", "pet", "visit", "visit", "petId", "model", "showVisits", "", "model", "clinicService", "petId", "finalize", "", "toString", "", "clone", "", "", "clinicService", "clinicService", "", "\n@author Juergen Hoeller\n@author Ken Krebs\n@author Arjen Poutsma\n@author Michael Isvy\n"],
    "methods": ["setAllowedFields(org.springframework.web.bind.WebDataBinder)", "getClass()", "wait(long)", "wait(long,int)", "wait()", "notifyAll()", "initNewVisitForm(int,java.util.Map)", "equals(java.lang.Object)", "registerNatives()", "processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)", "notify()", "hashCode()", "loadPetWithVisit(int)", "showVisits(int,java.util.Map)", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }, {
    "isInterface": false,
    "isImplicit": false,
    "isAnonymous": false,
    "simpleName": "PetclinicInitializer",
    "fullName": "org.springframework.samples.petclinic.PetclinicInitializer",
    "filePath": "/usr/app/data/repositories/petclinic/src/main/java/org/springframework/samples/petclinic/PetclinicInitializer.java",
    "referencedTypes": ["org.springframework.web.servlet.support.AbstractDispatcherServletInitializer", "boolean", "org.springframework.web.context.support.XmlWebApplicationContext", "javax.servlet.Filter", "java.lang.String", "org.springframework.web.context.WebApplicationContext", "org.springframework.web.filter.CharacterEncodingFilter", "java.lang.Override", "org.springframework.samples.petclinic.PetclinicInitializer"],
    "fieldTypes": ["java.lang.String"],
    "parameterTypes": ["long", "long", "int", "java.lang.Object"],
    "returnTypes": ["java.lang.Class", "void", "void", "void", "java.lang.String[]", "void", "org.springframework.web.context.WebApplicationContext", "boolean", "org.springframework.web.context.WebApplicationContext", "void", "void", "int", "javax.servlet.Filter[]", "void", "java.lang.String", "java.lang.Object"],
    "nestedTypes": [],
    "inheritedTypes": ["org.springframework.web.servlet.support.AbstractDispatcherServletInitializer"],
    "fieldCalls": [],
    "constructors": ["org.springframework.samples.petclinic.PetclinicInitializer()"],
    "textAndNames": ["PetclinicInitializer", "SPRING_PROFILE", "getClass", "", "arg0", "wait", "", "arg0", "arg1", "wait", "", "wait", "", "getServletMappings", "", "notifyAll", "", "createRootApplicationContext", "", "rootAppContext", "rootAppContext", "SPRING_PROFILE", "rootAppContext", "arg0", "equals", "", "createServletApplicationContext", "", "webAppContext", "webAppContext", "registerNatives", "", "notify", "", "hashCode", "", "getServletFilters", "", "characterEncodingFilter", "finalize", "", "toString", "", "clone", "", "", "In Servlet 3.0+ environments, this class replaces the traditional {@code web.xml}-based approach in order to configure the\n{@link ServletContext} programmatically.\n\u003cp/\u003e\nCreate the Spring \"\u003cstrong\u003eroot\u003c/strong\u003e\" application context.\u003cbr/\u003e\nRegister a {@link DispatcherServlet}  in the servlet context.\u003cbr/\u003e\nFor both servlets, register a {@link CharacterEncodingFilter}.\n\u003cp/\u003e", "In Servlet 3.0+ environments, this class replaces the traditional {@code web.xml}-based approach in order to configure the\n{@link ServletContext} programmatically.\n\u003cp/\u003e\nCreate the Spring \"\u003cstrong\u003eroot\u003c/strong\u003e\" application context.\u003cbr/\u003e\nRegister a {@link DispatcherServlet}  in the servlet context.\u003cbr/\u003e\nFor both servlets, register a {@link CharacterEncodingFilter}.\n\u003cp/\u003e\n\n@author Antoine Rey\n"],
    "methods": ["getClass()", "wait(long)", "wait(long,int)", "wait()", "getServletMappings()", "notifyAll()", "createRootApplicationContext()", "equals(java.lang.Object)", "createServletApplicationContext()", "registerNatives()", "notify()", "hashCode()", "getServletFilters()", "finalize()", "toString()", "clone()"],
    "appName": "petclinic"
  }]
}
